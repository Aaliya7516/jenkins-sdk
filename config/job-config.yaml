# This file declaratively says what performance tests should be run, and where they should be run.
# The tools will work out all permutations of runs from this.
# They will interrogate the database and see what runs already exist.
# Any runs that need running, will be.

servers:
  # This is where the performers should run.  Currently only "localhost" is supported.
  # In future we want to supported scp-ing the performers to a remote host.
  performer: localhost

  driver:
    # Where the driver runs.  Currently only "localhost" is supported.
    hostname: localhost

    # WARNING: files under this location will be modified.  Make sure you have a backup or have committed local changes.
    # Under this location will need these folders:
    #
    # transactions-fit-performer
    #
    # If want to test JVM:
    # couchbase-jvm-clients
    #
    # If want to test .NET:
    # couchbase-net-client
    # WARNING: It will automatically delete and re-checkout the directory 'couchbase-net-client' under here   (if need to run .NET performer)
    #          As the .NET performer requires this directory structure.
    source: /home/ec2-user

# Generally only CI should be talking to production database.  For local performance testing, spin up a localhost database.
# The password gets replaced by an environment variable when running on CI
database:
  # When run by jenkins-sdk, jenkins-sdk will use `hostname`, and the driver will use `hostname_docker`.
  # They need to be separate to allow the driver to connect to the database when both are running inside Docker.
  hostname: performance.sdk.couchbase.com
  hostname_docker: performance.sdk.couchbase.com
  port: 5432
  username: postgres
  password: password
  database: perf

environment:
  # Can override any executables here, to workaround environmental/path issues.
  executables:
  #    docker: /usr/bin/docker
    #docker: "c:\\Program/ Files\\Docker\\Docker\\resources\\bin\\docker.exe"

  # These will be added to environment variables when running executables
  envvar:
#    DOCKER_HOST: cbdyncluster docker-host docker ps

  # The workspace directory is where all temporary files will be placed
  workspace: workspace

# These settings will not be saved to the database
variables:
  # Outputs what would be performed, without actually performing it.  Config files still get written.
  dryRun: false

  # Whether to ignore whatever runs are already in the database
  force: false

  # If confident that Docker images are built and up-to-date
  skipDriverDockerBuild: false
  skipPerformerDockerBuild: false

  # How many times we require each permutation to be run.  Smoothes out variance.
  runsRequired: 1

  # Whether the failure of an individual job should stop everything.
  stopOnFailure: false

matrix:
  clusters:
      # Currently CI is hardcoded to look for one cluster written in a specific format, so it can replace the hostname
      # Update: now "two" clusters, for stellar-nebula testing
      # In future, may return to having jenkins-sdk control cluster creation (CBD-4948)
    - type: unmanaged
      hostname: localhost
      # When run by jenkins-sdk, jenkins-sdk will use `hostname`, and the driver will use `hostname_docker`.
      # They need to be separate to allow the driver to connect to the cluster when both are running inside Docker.
      hostname_docker: cbs
      storage: couchstore
      replicas: 0
      # A number of other fields will get filled in dynamically, both by CI and by jenkins-sdk.  Uncomment the below
      # to help with localhost testing against a copy of the prod database.
      # Remember to also change top-level variables.
#      topology: A
#      region: us-east-2
#      version: 7.1.1-3175-enterprise
#      cpuCount: 16
#      instance: c5.4xlarge
#      nodeCount: 1
#      compaction: disabled
#      memory: 28000

      # Stellar Nebula testing - there is logic elsewhere that will only run this against a hardcoded list of performers
      # that support SN.
      # There's also hardcoded logic that will only run workloads that the Java SDK can currently support on Protostellar.
      # This isn't a separate cluster, it's just the same cluster with Stellar Gateway running.  We record it as two
      # clusters so we end up with the desired separate set of database results.
    - type: unmanaged
      hostname: localhost
      hostname_docker: cbs
      scheme: protostellar
      storage: couchstore
      replicas: 0
      # A number of other fields will get filled in dynamically, both by CI and by jenkins-sdk.  Uncomment the below
      # to help with localhost testing against a copy of the prod database.
#      topology: A
#      region: us-east-2
#      version: 7.1.1-3175-enterprise
#      cpuCount: 16
#      instance: c5.4xlarge
#      nodeCount: 1
#      compaction: disabled
#      memory: 28000
#      stellarNebulaSha: 945b3d0e611ddb7549453fa30b22905cb4d33a9e

  implementations:
    - language: Java
      version: 3.X.X

    - language: Java
      version: snapshot

    # https://review.couchbase.org/c/couchbase-jvm-clients/+/184600
    # Current head of Protostellar fork
    - language: Java
      version: refs/changes/69/184669/1

    # https://review.couchbase.org/c/couchbase-jvm-clients/+/184307
    # CoreIoKvOps test - only supports KV gets
    - language: Java
      version: refs/changes/07/184307/8

      # If changing or adding any Gerrit patches, may need to make changes in ConfigParser

    - language: .NET
      version: 3.3.X

    - language: .NET
      version: 3.4.X

    - language: .NET
      version: snapshot

    # Earliest version the Go performer can compile is 2.3.0 (possibly earlier)
    - language: Go
      version: 2.3.X

    - language: Go
      version: 2.4.X

    - language: Go
      version: 2.5.X

    # Temporarily removing Go as 2.6.0 not building
#    - language: Go
#      version: 2.6.X

    # snapshot not building
    # github.com/couchbase/gocb/v2: reading github.com/couchbase/gocb/go.mod at revision v2.6.0-20221215141909-de24405a24d7: unknown revision v2.6.0-20221215141909-de24405a24d7
#    - language: Go
#      version: snapshot

    - language: Python
      version: snapshot

    - language: Python
      version: 4.1.X

    # Temporarily removing Node as failing to stream
#    - language: Node
#      version: snapshot
#
#    - language: Node
#      version: 4.2.X

  workloads:

    # KV replaces
    - operations:
        - op: replace
          bounds:
            forSeconds: $forSeconds
          docLocation:
            method: pool
            poolSize: $poolSize
            poolSelectionStrategy: counter
      settings:
        variables:
          - name: poolSize
            value: 10000
      exclude:
        - language: Java
          version: refs/changes/69/184669/1
        - language: Java
          version: refs/changes/07/184307/7

    # KV gets
    - operations:
        - op: get
          bounds:
            forSeconds: $forSeconds
          docLocation:
            method: pool
            poolSize: $poolSize
            poolSelectionStrategy: randomUniform
      settings:
        variables:
          - name: poolSize
            value: 10000

            # Experiments for Java Stellar Nebula
          - name: com.couchbase.protostellar.overrideHostname
            type: tunable
            include:
              - implementation:
                  language: Java
                  version: refs/changes/69/184669/1
              - cluster:
                  scheme: protostellar
            # This magic string allows a Docker container to talk to STG running on the host's network
            values: ["172.17.0.1"]

          - name: com.couchbase.protostellar.executorType
            type: tunable
            include:
              - implementation:
                  language: Java
                  version: refs/changes/69/184669/1
              - cluster:
                  scheme: protostellar
            values: ["ThreadPool"]
            # values: ["ForkJoinPool", "ThreadPool"]

          - name: com.couchbase.protostellar.executorMaxThreadCount
            type: tunable
            include:
              - implementation:
                  language: Java
                  version: refs/changes/69/184669/1
              - cluster:
                  scheme: protostellar
            # Seeing issues that _might_ be caused by 1 thread
            values: [ "8", "16", "32" ]

          - name: com.couchbase.protostellar.numEndpoints
            type: tunable
            include:
              - implementation:
                  language: Java
                  version: refs/changes/69/184669/1
              - cluster:
                  scheme: protostellar
            values: [ "1", "2", "4", "8", "16" ]

    # KV inserts
    - operations:
        - op: insert
          bounds:
            forSeconds: $forSeconds
          docLocation:
            method: uuid
      settings:
        variables:
          - name: docNum
            value: 10000000
      exclude:
        - language: Java
          version: refs/changes/69/184669/1
        - language: Java
          version: refs/changes/07/184307/7

    # Transactions
    - operations:
        - transaction:
            ops:
              - op: replace
                docLocation:
                  method: pool
                  poolSize: $poolSize
                  poolSelectionStrategy: randomUniform
              - op: insert
                docLocation:
                  method: uuid
            bounds:
              forSeconds: $forSeconds
      settings:
        variables:
          - name: poolSize
            value: 10000
      include:
        # todo port this to use Include - though will need to support both AND and OR
        - language: Java
          # todo support 3.3.0+
          version: 3.3.0
        - language: Go
          version: 2.5.3

# Top-level variables can be overwritten on a per-workload basis.
settings:
  # These GRPC settings are believed to give good results (CBD-4975).  GRPC settings don't get written to the
  # database, as streaming back results shouldn't affect the results themselves.  So changing these settings
  # will not trigger any reruns.
  grpc:
    flowControl: true
    batch: 1000
    compression: true
  variables:
    - name: forSeconds
      value: 300
    - name: horizontalScaling
      value: 20
