# This file declaratively says what performance tests should be run, and where they should be run.
# The tools will work out all permutations of runs from this.
# They will interrogate the database and see what runs already exist.
# Any runs that need running, will be.

servers:
  # This is where the performers should run.  If not "localhost" they will be scp-ed to here, in the form of a tarred Docker image.
  performer: localhost

  driver:
    # Where the driver runs.  Currently only "localhost" is supported.
    hostname: localhost

    # Either the location of a checked-out transactions-fit-performer / perf-sdk project, or "https://github.com/couchbaselabs/transactions-fit-performer"
    # source: https://github.com/couchbaselabs/transactions-fit-performer
    source: /Users/charliehayes/Documents/GitHub/perf-sdk
#    source: /home/ec2-user/workspace/performance/sdk-performance/perf-sdk

# Generally only CI should be talking to production database.  For local performance testing, spin up a localhost database.
# The password gets replaced by an environment variable when running on CI
database:
  hostname: 54.193.85.254
  port: 5432
  username: postgres
  password: password
  database: perf

environment:
  # Can override any executables here, to workaround environmental/path issues.
  executables:
  #    docker: /usr/bin/docker

  # These will be added to environment variables when running executables
  envvar:
#    DOCKER_HOST: cbdyncluster docker-host docker ps

# These settings will not be saved to the database
settings:
  # Outputs what would be performed, without actually performing it.  Config files still get written.
  dryRun: true

  # Whether to ignore whatever runs are already in the database
  force: false

  # If confident that all Docker images are built and up-to-date
  skipDockerBuild: false

matrix:
  clusters:
    #    - type: cbdyncluster
    #      version: 7.0-stable
    #      replicas: 0
    #      nodes: 1
    - type: unmanaged
      hostname: cbs
  #    - type: gocaves
  #      source: /home/ec2-user/workspace/performance/sdk-performance/gocaves
  ##      source: /Users/charliehayes/Documents/GitHub/gocaves
  #      hostname: gocaves
  #      port: 8080

  implementations:
    - language: python
      version: 115c4219c45a44cf3ded9c08eaedd0f92b2f35a4
    - language: python
      version: 115c4219c45a44cf3ded9c08eaedd0f92b2f35a4
#        - language: python
#          version: 4.0.1
    #    - language: python
    #      version: 4.0.0
#    - language: python
#      version: 3.2.7
    #    - language: python
    #      version: 3.2.6
    #    - language: python
    #      version: 3.2.5
    #    - language: python
    #      version: 15056ea8dd6e172eab332fa29f83e3df29f4c4b5
    #    - language: python
    #      version: 7b43a9de5adb2debf4fb6981b9b82f01506e6b8c
    #    - language: python
    #      version: 18f8c4931f4047fa8a6761ccb4056acf2e2a012e
    #    - language: python
    #      version: 3ac9421131629239af815296ef0c98ec3a20d407
    #    - language: java
    #      version: 3.2.7
    #    - language: java
    #      version: 3.2.6
    #    - language: java
    #      version: 3.2.5
    #    - language: java
    #      version: 3.3.0
    #    - language: java
    #      version: 3.3.1
    # If just port is specified: the performer is expected to be running already at location servers.performer.
    # E.g. this is for localhost testing.
    # Otherwise, specify language and version, and this tool will spinup a performer running at location servers.performer.
  #    - port: 8060

  workloads:
    - operations:
        - op: insert
          count: $doc_num
#    - operations:
#        - op: get
#          count: $doc_num
#    - operations:
#        - op: remove
#          count: $doc_num
#    - operations:
#        - op: replace
#          count: $doc_num


variables:
  custom:
    - name: doc_num
      value: 6000000
  predefined:
    - name: horizontal_scaling
      values:
        - 1
#        - 2
#    - name: durability
#      values:
#        - MAJORITY
#        - PERSIST
